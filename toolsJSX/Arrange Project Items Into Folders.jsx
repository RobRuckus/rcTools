    //ArrangeProjectItemsIntoFolders.jsx	//©2010 Lloyd Alvarez  http://aescripts.com	//v 1.0	//	//Will arrange selected proj items into folder based on their root names. 	// For example:	// Hero_Diffuse.[0-100].exr	// Hero_Reflection.[0-100].exr	// Hero_Shadow.[0-100].exr	// Bg_Diffuse.[0-100].exr	// Bg_Reflection.[0-100].exr	// Bg_Shadow.[0-100].exr	//	// The script will ask for the delimiter character, so in this case entering _ will all be put  the items into 2 folders: 	// Hero	// Bg    // 	// Version History	// 1.0 Initial Release	//    		////////////////USER VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////	//    var defaultDelimiter = "-";  //The default delimiter character, must be in quotations	var askForDelimiter = true; //Set to true to have the script prompt for a new delimiter, otherwise the default set above will be used.	//	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	    var scriptTitle = "ArrangeProjectItemsIntoFolders";var scriptVersion  = "v1.0";function findFolder (folderName,parentFolderObj) {	for (var i=1; i <= app.project.numItems; i++) {		if (app.project.item(i) instanceof FolderItem) {			if (app.project.item(i).name == folderName && app.project.item(i).parentFolder == parentFolderObj) {				return app.project.item(i);				} //if (app.project.item(i).name == importedItemsFolderName)			}//if (app.project.item(i) instanceof FolderItem) 		}//for (var i=0; i< app.project.numItems; i++)	return app.project.items.addFolder(folderName);	}//function findFolder ()function IsInArray(theElement,theArray) {				var arrayIndex = -1;					for (var i = 0; i < theArray.length; i++) {						if (theElement == theArray[i][0])							arrayIndex = i;							}			return arrayIndex;			}	app.beginUndoGroup(scriptTitle);	var projItems = app.project.selection;	if (projItems.length > 0 ) {		if (askForDelimiter) {			var delimiter = prompt ("For example in Hero-Diffuse.[0-100].exr, the delimiter is -",defaultDelimiter,"What is the delimiter character?");			} else {				var delimiter = defaultDelimiter;				}if (delimiter) {	var prefixesArray = new Array();	for (var i=0; i < projItems.length; i++) {		var prefix = projItems[i].name.substring(0,projItems[i].name.indexOf(delimiter));		var prefixArrayIndex = IsInArray(prefix,prefixesArray);		if (prefixArrayIndex == -1) {		prefixesArray[prefixesArray.length] = [prefix,projItems[i].parentFolder,i];		} else {			prefixesArray[prefixArrayIndex][prefixesArray[prefixArrayIndex].length] = i;			}		}		for (var j=0; j < prefixesArray.length; j++) {		var myFolder = findFolder (prefixesArray[j][0],prefixesArray[j][1]);		for (var k=2; k < prefixesArray[j].length; k++) {			var saveParentFolder = projItems[prefixesArray[j][k]].parentFolder;			projItems[prefixesArray[j][k]].parentFolder = myFolder;			}			myFolder.parentFolder = saveParentFolder;			myFolder.selected = true;			}		} //if (delimiter) 	} else {		alert("Please select the items you'd like to organize into folders in the project window first, then run the script again");		}